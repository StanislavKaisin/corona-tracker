{"version":3,"sources":["components/CovidCard/CovidCard.jsx","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","asserts/colors.js","components/CountryPicker/CountryPicker.jsx","App.jsx","index.js","components/CovidCard/CovidCard.module.css","App.module.css","asserts/corona_header.png","components/Cards/Cards.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css"],"names":["covidCard","title","value","className","lastUpdate","Grid","container","spacing","justify","classesNames","styles","card","item","component","Card","xs","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","Date","toDateString","Cards","data","confirmed","recovered","deaths","CovidCard","url","fetchData","a","country","changeableURL","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","fetchAPICountries","FormControl","formControl","NativeSelect","defaultValue","onChange","event","target","key","App","state","fetchedData","setState","this","src","coronaHeader","alt","with","height","image","Component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.8bdb281b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport styles from \"./CovidCard.module.css\";\r\nimport CountUp from \"react-countup\";\r\nimport classesNames from \"classnames\";\r\n\r\nconst covidCard = ( {title, value, className, lastUpdate}) => {\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={2}\r\n      justify=\"center\"\r\n      className={classesNames(styles.card, styles[className])}\r\n    >\r\n      <Grid item component={Card} xs={12}>\r\n        <CardContent>\r\n          <Typography color=\"textSecondary\" gutterBottom>\r\n            {title}\r\n          </Typography>\r\n          <Typography variant=\"h5\">\r\n            <CountUp\r\n              start={0}\r\n              end={value}\r\n              duration={2.1}\r\n              separator={\".\"}\r\n            />\r\n          </Typography>\r\n          <Typography color=\"textSecondary\">\r\n            {new Date(lastUpdate).toDateString()}\r\n          </Typography>\r\n          <Typography variant=\"body2\">\r\n            Number of active cases of COVID-19\r\n          </Typography>\r\n        </CardContent>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\nexport default covidCard;\r\n","import React from \"react\";\r\nimport styles from \"./Cards.module.css\";\r\n\r\nimport CovidCard from \"../CovidCard/CovidCard\"\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n  if (!confirmed) {\r\n    return \"Loading...\";\r\n  }\r\n  return (\r\n    <div className={styles.container}>\r\n      <CovidCard \r\n        title='Infected'\r\n        value={confirmed.value}\r\n        className={'infected'}\r\n        lastUpdate={lastUpdate}\r\n      />\r\n      <CovidCard \r\n        title='Deaths'\r\n        value={deaths.value}\r\n        className={'deaths'}\r\n        lastUpdate={lastUpdate}\r\n      />\r\n      <CovidCard \r\n        title='Recovered'\r\n        value={recovered.value}\r\n        className={'recovered'}\r\n        lastUpdate={lastUpdate}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default Cards;\r\n","import axios from \"axios\";\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country='') => {\r\n  let changeableURL=url;\r\n  if(country){\r\n    changeableURL=`${url}/countries/${country}`\r\n  }\r\n  try {\r\n    const {\r\n      data: { confirmed, recovered, deaths, lastUpdate },\r\n    } = await axios.get(changeableURL);\r\n    return {\r\n      confirmed,\r\n      recovered,\r\n      deaths,\r\n      lastUpdate,\r\n    };\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n    const modifiedData = data.map((dailyData) => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate\r\n    }));\r\n    return modifiedData;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const {data: {countries}} = await axios.get(`${url}/countries`);\r\n    return countries.map((country) => country.name)\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};","import React, { useState, useEffect } from \"react\";\r\nimport { fetchDailyData } from \"../../api/index\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport styles from \"./Chart.module.css\";\r\nimport {confirmedColor,confirmedHexColor, recoveredColor, deathsColor, deathsHexColor} from '../../asserts/colors';\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setDailyData(await fetchDailyData());\r\n    };\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  const lineChart = dailyData.length ? (\r\n    <Line\r\n      data={{\r\n        labels: dailyData.map(({ date }) => date),\r\n        datasets: [\r\n          {\r\n            data: dailyData.map(({ confirmed }) => confirmed),\r\n            label: \"Infected\",\r\n            borderColor: confirmedHexColor,\r\n            // backgroundColor: confirmedColor,\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailyData.map(({ deaths }) => deaths),\r\n            label: \"Deaths\",\r\n            borderColor: deathsHexColor,\r\n            backgroundColor: deathsColor,\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  const barChart = confirmed ? (\r\n    <Bar\r\n      data={{\r\n        labels: [\"Infected\", \"Deaths\", \"Recovered\"],\r\n        datasets: [\r\n          {\r\n            label: \"People\",\r\n            backgroundColor: [\r\n              confirmedColor,\r\n              deathsColor,\r\n              recoveredColor,\r\n            ],\r\n            data: [confirmed.value, deaths.value, recovered.value],\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        legend: { display: false },\r\n        title: { display: true, text: `Current state in ${country}` },\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  return (\r\n    <div className={styles.container}>{country ? barChart : lineChart}</div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","export const confirmedColor = 'rgba(255, 136, 0, 0.5)'\r\nexport const confirmedHexColor = '#ff8800'\r\nexport const deathsColor = 'rgba(255, 0, 0, 0.5)'\r\nexport const deathsHexColor = '#ff0000'\r\nexport const recoveredColor = 'rgba(0, 255, 0, 0.5)'","import React, { useState, useEffect } from \"react\";\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\nimport styles from \"./CountryPicker.module.css\";\r\nimport { fetchCountries } from \"./../../api/index\";\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n  const [fetchedCountries, setFetchedCountries] = useState([]);\r\n  useEffect(() => {\r\n    const fetchAPICountries = async () => {\r\n      setFetchedCountries(await fetchCountries());\r\n    };\r\n    fetchAPICountries();\r\n    return () => {\r\n      //cleanup\r\n    };\r\n  }, [setFetchedCountries]);\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect\r\n        defaultValue=\"\"\r\n        onChange={(event) => {\r\n          handleCountryChange(\r\n            event.target.value === \"global\" ? \"\" : event.target.value\r\n          );\r\n        }}\r\n      >\r\n        <option value=\"global\">Select state</option>\r\n        {fetchedCountries.map((country) => (\r\n          <option value={country} key={country}>\r\n            {country}\r\n          </option>\r\n        ))}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default CountryPicker;\r\n","import React, { Component } from \"react\";\r\n\r\nimport coronaHeader from \"./asserts/corona_header.png\";\r\n\r\nimport { Cards, Chart, CountryPicker } from \"./components\";\r\nimport styles from \"./App.module.css\";\r\nimport { fetchData } from \"./api/index.js\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    data: {},\r\n    country: \"\",\r\n  };\r\n  async componentDidMount() {\r\n    const fetchedData = await fetchData();\r\n    this.setState({ data: fetchedData });\r\n  }\r\n  handleCountryChange = async (country) => {\r\n    const fetchedData = await fetchData(country);\r\n    this.setState({ data: fetchedData, country: country });\r\n  };\r\n\r\n  render() {\r\n    const { data, country } = this.state;\r\n    return (\r\n      <div className={styles.container}>\r\n        <img\r\n          src={coronaHeader}\r\n          alt=\"COVID-19\"\r\n          with={300}\r\n          height={72}\r\n          className={styles.image}\r\n        />\r\n        <Cards data={data} />\r\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n        <Chart data={data} country={country} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App.jsx\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"CovidCard_card__3ZQZR\",\"infected\":\"CovidCard_infected__n02Jy\",\"recovered\":\"CovidCard_recovered__31Vgl\",\"deaths\":\"CovidCard_deaths__1cPQc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__20N7P\",\"image\":\"App_image__9ZFU_\"};","module.exports = __webpack_public_path__ + \"static/media/corona_header.d7265326.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1piWD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__Z07fp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2FLVu\"};"],"sourceRoot":""}